name: '[job] Docker build/push cms-base'

on:
  workflow_call:
    secrets:
      DOCKER_TOKEN:
        required: true
    inputs:
      IS_RELEASE:
        type: boolean
        default: false

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # Replace special characters in ref_name
      IMAGE: "mysticeragames/makeitstatic-cms:base-dev-$( echo ${{ github.ref_name }} | sed 's|[^a-zA-Z0-9\\.\\-\\_]|-|g' )"
      IMAGE_RELEASE: mysticeragames/makeitstatic-cms:base-${{ github.event.release.name }}


    steps:

      # When using third-party actions:
      # Use a hash (hover over the commit) and not a release-version to make sure it has not been tampered with
      # https://github.com/actions/checkout/releases/tag/v4.2.2
      # More info: https://blog.rafaelgss.dev/why-you-should-pin-actions-by-commit-hash
    - name: Checkout
      #uses:actions/checkout@v4.2.2
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683


      # No need to use docker/login-action, it uses the same method (only silent):
      # https://github.com/docker/login-action/blob/v3.3.0/src/docker.ts#L35-L37
    - name: Docker login
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u rboonzaijer --password-stdin


    - name: Docker build
      run: docker build --no-cache -t ${{ env.IMAGE }} .


    - name: Check if dependencies are available
      run: |
        COMMANDS=$'

        echo -e "\n[curl]" && \
        curl -V && \

        echo -e "\n[git]" && \
        git -v && \

        echo -e "\n[npm]" && \
        npm -v && \

        echo -e "\n[composer]" && \
        composer --version && \

        echo -e "\n[php]" && \
        php -v && \

        echo -e "\n"
        '

        docker run --rm ${{ env.IMAGE }} sh -c "${COMMANDS}" || exit 1


    - name: Docker push
      run: docker push ${{ env.IMAGE }}


    - if: ${{ inputs.IS_RELEASE == 'true' }}
      name: Docker push release
      run: |
        docker tag ${{ env.IMAGE }} ${{ env.IMAGE_RELEASE }}
        docker push ${{ env.IMAGE_RELEASE }}
